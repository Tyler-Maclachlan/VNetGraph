!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}(n(3))},function(t,e,n){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=i(n(2)),s=i(n(4)),r=n(5),c=n(6),a=function(){function t(t,e,n,i){var r=this;this.numLoops=0,this.container=t;var a=e.length,u=n.length;this.graphEdges=new Map,this.graphNodes=new Map;for(var l=0;l<a;l++){var h={x:Math.random()*t.clientWidth,y:Math.random()*t.clientHeight};this.graphNodes.set(e[l].id,new o.default(1,h))}for(l=0;l<u;l++)this.graphEdges.set(l,new s.default(this.graphNodes.get(n[l].source),this.graphNodes.get(n[l].target),150,20));this.canvas=c.createCanvas(t),requestAnimationFrame(function(){r.mainLoop()})}return t.prototype.mainLoop=function(){var t=this;console.log("step"),requestAnimationFrame(function(){t.mainLoop()}),r.physicsStep(this.graphNodes,this.graphEdges),c.render(this.canvas.getContext("2d"),this.graphNodes,this.graphEdges),this.numLoops++},t}();window.VNetGraph||(window.VNetGraph=a),e.default=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),o=function(){function t(t,e){this.mass=t,this.position=e,this.accelleration={x:0,y:0},this.velocity={x:0,y:0}}return t.prototype.update=function(){this.velocity=i.addVecs(this.velocity,this.accelleration),this.position=i.addVecs(this.position,this.velocity),this.velocity=i.multiplyVecByScalar(this.velocity,.7),this.accelleration=i.multiplyVecByScalar(this.accelleration,.3)},t}();e.default=o},function(t,e,n){"use strict";function i(t,e){return e?{x:t.x/e,y:t.y/e}:{x:t.x,y:t.y}}function o(t){return Math.sqrt(t.x*t.x+t.y*t.y)}function s(t,e){return t.x*e.y+t.y*e.y}function r(t){return 180*t/Math.PI}Object.defineProperty(e,"__esModule",{value:!0}),e.addVecs=function(t,e){return{x:t.x+e.x,y:t.y+e.y}},e.subVecs=function(t,e){return{x:t.x-e.x,y:t.y-e.y}},e.multiplyVecByScalar=function(t,e){return{x:t.x*e,y:t.y*e}},e.divideVecByScalar=i,e.getVecLength=o,e.normalizeVec=function(t){return i(t,o(t))},e.getDistanceBetweenVecs=function(t,e){var n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)},e.dotVecs=s,e.getAngleBetweenVecs=function(t,e){var n=o(t),i=o(e),c=s(t,e)/(n*i);return r(Math.acos(c))},e.radsToDegrees=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),o=function(){function t(t,e,n,i){this.node1=t,this.node2=e,this.restDistance=n,this.stiffness=i}return t.prototype.update=function(){var t=i.getDistanceBetweenVecs(this.node1.position,this.node2.position);t=t||1;var e=i.normalizeVec(i.subVecs(this.node2.position,this.node1.position)),n=i.normalizeVec(i.subVecs(this.node1.position,this.node2.position)),o=i.subVecs(this.node1.velocity,this.node2.velocity),s=i.subVecs(this.node2.velocity,this.node1.velocity);console.log(t);var r=this.stiffness*(t-this.restDistance)*(e.x/t)-.03*o.x,c=this.stiffness*(t-this.restDistance)*(e.y/t)-.03*o.y,a=this.stiffness*(t-this.restDistance)*(n.x/t)-.03*s.x,u=this.stiffness*(t-this.restDistance)*(n.y/t)-.03*s.y;console.log(r,c,a,u),this.node1.accelleration.x+=r/this.node1.mass,this.node1.accelleration.y+=c/this.node1.mass,this.node2.accelleration.x+=a/this.node2.mass,this.node2.accelleration.y+=u/this.node2.mass},t}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.physicsStep=function(t,e){e.forEach(function(t){t.update()}),t.forEach(function(t){t.update()})}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.createCanvas=function(t){var e=document.createElement("canvas"),n=t.clientWidth,i=t.clientHeight;return e.width=n,e.height=i,t.appendChild(e),e},e.render=function(t,e,n){t.clearRect(0,0,t.canvas.width,t.canvas.height),n.forEach(function(e){!function(t,e){t.beginPath(),t.lineWidth=2,t.strokeStyle="blue",t.moveTo(e.node1.position.x,e.node1.position.y),t.lineTo(e.node2.position.x,e.node2.position.y),t.stroke()}(t,e)}),e.forEach(function(e){!function(t,e,n){void 0===n&&(n=20),t.beginPath(),t.arc(e.position.x,e.position.y,n,0,2*Math.PI,!1),t.fillStyle="#252525",t.fill(),t.lineWidth=5,t.strokeStyle="#252525",t.stroke()}(t,e,20)})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,